import { useState, useEffect } from 'react';
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import dynamic from 'next/dynamic'
import { useRouter } from "next/router";
import { useSession, SignOutLink } from "../components/Session"
import { EditorState } from 'draft-js';
import { connectToWallet, disconnectWallet, destroy, init } from './metamask-login.jsx';

const SimpleEditor = dynamic(() => import( '../components/Editor.jsx' ), { ssr: false } );

export default function Home() {
    const router = useRouter();
    const session = useSession();
    const [address, setAddress] = useState(null);
    // const [session, setSession] = useState(null);
    const [client, setClient] = useState(null);
    const [note, setNote] = useState('');
    const [doc, setDoc] = useState('');
    const [msg, setMsg] = useState('');
    const [editorState, setEditorState] = useState(EditorState.createEmpty()); 
    const [isLoggedIn, setIsLoggedIn] = useState(false); 

    // const handleBtnClick = () => {
    //   return;
    // }

  // Store note in Privy
  const saveNote = async () => {
  // if (!address) {alert('Connect your wallet to create and edit notes.');}
  console.log('pud address:' + session.address);  // null
  const [htmlNote] = await session.privy.put(session.address, [
    {
      field: "html-note",
      value: note ? note.toString() : ''
      // value: 'Nothing here.'
    }
  ])
  setMsg('Note saved!');
  // .then(() => {console.log(address)});
  // console.log('Note save');
  };

  const deleteNote = async () => {
    return;
  }

  useEffect(() => {
    // if (!session.address) {
    //   connectToWallet(session, setAddress);
    // }
    if (!session.siwe.token || !session.address) {
      router.push('/login');
    }
    console.log(session);
}, []);

  // Update address if page is refreshed.
  // const updateAddress = async () => {
  //   const address = await session.address();
  //   setAddress(address);
  // };
  // useEffect(() => {
  //     init(PrivyClient, SiweSession, setSession).then(() => {updateAddress});
  // }, []);

  // Get user data from Privy.
  const getUserData = async () => {
      try {
        if (!session.address) return;

        // Fetch user's note from Privy
        const [note] = await session.privy.get(
          session.address,
          ["html-note"]
        );
        console.log(note);

      } catch (error) {
        console.error(error);
      }
  };

  // Get the user data from Privy whenever the wallet address is set.
  useEffect(() => {
      async () => {
          const doc = await getUserData().then((note) => {console.log(note)});
          setDoc(doc);
          console.log(doc);
        // getUserData().then((note) => {console.log(note)});
      }
  }, [address]);

  // Show note as it is updated
  useEffect(() => {
      if (!note) return;
      console.log(`New note: ${note}`);
      // document.body.style = `background: ${favoriteColor};`;
  }, [note]);

  return (
    <div className={styles.container}>
      <Head>
        <title>Privy Docs</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className={styles.main}>
        <h1 className={styles.title}>
          Privy &middot; Docs
        </h1>

        <SignOutLink />

        <SimpleEditor style={{clear: 'both'}} note={note} setNote={setNote} editorState={editorState} setEditorState={setEditorState} />

        {/* <div className={styles.grid}>
          <a href="https://nextjs.org/docs" className={styles.card}>
            <h2>Documentation &rarr;</h2>
            <p>Find in-depth information about Next.js features and API.</p>
          </a>

          <a href="https://nextjs.org/learn" className={styles.card}>
            <h2>Learn &rarr;</h2>
            <p>Learn about Next.js in an interactive course with quizzes!</p>
          </a>

          <a
            href="https://github.com/vercel/next.js/tree/canary/examples"
            className={styles.card}
          >
            <h2>Examples &rarr;</h2>
            <p>Discover and deploy boilerplate example Next.js projects.</p>
          </a>

          <a
            href="https://vercel.com/new?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
            className={styles.card}
          >
            <h2>Deploy &rarr;</h2>
            <p>
              Instantly deploy your Next.js site to a public URL with Vercel.
            </p>
          </a>
        </div> */}
      </main>

      {/* onClick={() => {address ? putUserData : alert('Connect your wallet to create and edit notes.')}} */}
      {/* <Login setAddress={setAddress} /> */}
      {/* () => {connectToWallet; handleBtnClick();} */}
      <footer className={styles.footer}>
      {/* <button onClick={() => {connectToWallet(session, setAddress)}}>Connect Wallet</button> */}
      {/* <button onClick={() => {disconnectWallet(session, setAddress, useSession, destroy)}}>Log out</button> */}
      
      <button className={Object.assign({}, styles.button, styles.saveNote)} onClick={saveNote}>
              <strong>ðŸ’¾ </strong>&nbsp; Save Note
            </button>      &nbsp;&nbsp;&nbsp;
      <button className={Object.assign({}, styles.button, styles.inlineBtn)} onClick={deleteNote}>
              <strong>ðŸ—‘ </strong>&nbsp; Delete Note
            </button>
        <h5>{msg}</h5>
        {/* <a
          href="https://vercel.com?utm_source=create-next-app&utm_medium=default-template&utm_campaign=create-next-app"
          target="_blank"
          rel="noopener noreferrer"
        >
          Powered by{' '}
          <span className={styles.logo}>
            <Image src="/vercel.svg" alt="Vercel Logo" width={72} height={16} />
          </span>
        </a> */}
      </footer>
    </div>
  )
}
